// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Display = (function() {

    function Display(app) {
      this.app = app;
      this.print = __bind(this.print, this);

      this.randwith = __bind(this.randwith, this);

      this.clear = __bind(this.clear, this);

      this.draw = __bind(this.draw, this);

      this.setDimensions = __bind(this.setDimensions, this);

      this.canvas = $("canvas");
      this.ctx = this.canvas[0].getContext('2d');
      this.ctx.fillCircle = function(x, y, r) {
        this.beginPath();
        this.arc(x, y, r, 0, Math.PI * 2, false);
        this.closePath();
        return this.fill();
      };
    }

    Display.prototype.setDimensions = function(width, height) {
      this.width = width;
      this.height = height;
      this.canvas[0].width = this.width;
      return this.canvas[0].height = this.height;
    };

    Display.prototype.draw = function() {
      var num, _i, _ref, _results;
      this.clear();
      _results = [];
      for (num = _i = 1, _ref = this.roundom(100); 1 <= _ref ? _i <= _ref : _i >= _ref; num = 1 <= _ref ? ++_i : --_i) {
        this.ctx.fillStyle = "rgba(255,235,215," + (Math.random()) + ")";
        _results.push(this.ctx.fillCircle(this.roundom(this.width), this.roundom(this.height), this.roundom(this.width / 8)));
      }
      return _results;
    };

    Display.prototype.clear = function() {
      this.ctx.fillStyle = "rgb(" + (this.randwith(100, 155)) + "," + (this.randwith(100, 155)) + "," + (this.randwith(100, 155)) + ")";
      return this.ctx.fillRect(0, 0, this.width, this.height);
    };

    Display.prototype.randwith = function(int, modifier) {
      return this.roundom(int) + modifier;
    };

    Display.prototype.roundom = function(int) {
      return Math.ceil(Math.random() * int);
    };

    Display.prototype.print = function() {
      return this.canvas[0].toDataURL();
    };

    return Display;

  })();

}).call(this);
