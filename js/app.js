// Generated by CoffeeScript 1.4.0
(function() {
  var App,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  App = (function() {

    function App() {
      this.calculateDimensions = __bind(this.calculateDimensions, this);

      this.download = __bind(this.download, this);

      this.make = __bind(this.make, this);

      this.setType = __bind(this.setType, this);
      this.a1Width = 7016;
      this.a1Height = 9922;
      this.display = new Display(this);
      this.effects = new Effects;
      $("#make").click(this.make);
      $(".close").live('click', this.remove);
      $('#type').change(this.setType);
    }

    App.prototype.remove = function() {
      $(this).parent('.downloadable').fadeOut(function() {
        return $(this).remove();
      });
      return false;
    };

    App.prototype.setType = function(event) {
      this.type = $(event.currentTarget).val();
      $('#digital, #print').hide();
      return $("#" + this.type).show();
    };

    App.prototype.make = function() {
      this.calculateDimensions();
      this.display.draw();
      $("article").append("      <div class='downloadable'>      <a href='#' class='close'>x</a>      <a href='" + (this.display.print()) + "' target='_blank' class='download' download='generated-art'>      <span><img src='" + (this.display.print()) + "' class='" + this.orientation + "'></span>Download      </a>      <div>");
      return false;
    };

    App.prototype.download = function(event) {
      var object, strData;
      object = $(event.currentTarget);
      strData = object.find('img').attr('src');
      document.location.href = strData.replace("image/png", "image/octet-stream");
      return false;
    };

    App.prototype.calculateDimensions = function() {
      var dimensions, divisor, height, string, width;
      if (this.type === 'print') {
        divisor = $('select#print').val();
        width = Math.round(this.a1Width / divisor);
        height = Math.round(this.a1Height / divisor);
      } else {
        string = $('select#digital').val();
        dimensions = string.split('x');
        height = dimensions[0];
        width = dimensions[1];
      }
      this.orientation = $('select#orientation').val();
      if (this.orientation === 'landscape') {
        return this.display.setDimensions(height, width);
      } else {
        return this.display.setDimensions(width, height);
      }
    };

    return App;

  })();

  $(function() {
    return window.app = new App;
  });

}).call(this);
